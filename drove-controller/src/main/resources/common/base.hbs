<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <!--<link rel="icon" href="favicon.ico">-->

    <title>D R O V E</title>
    <!-- Bootstrap core CSS -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/bootstrap-icons.min.css" rel="stylesheet">
    <!--    <link href="/open-iconic-master/font/css/open-iconic-bootstrap.css" rel="stylesheet">-->
    <link href="/css/datatables.min.css" rel="stylesheet">
    <!--    <link href="/css/datatables.bootstrap4.min.css" rel="stylesheet">-->

    {{#block "page_css_includes"}}

    {{/block}}
    <link href="/css/drove.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <!--<link href="album.css" rel="stylesheet">-->
    <style>
    {{#block "page_css"}}

    {{/block}}


    </style>
</head>
<body>
<header>

    <nav class="navbar navbar-expand-lg bg-dark" data-bs-theme="dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">
                <img src="/images/drove-logo-white.png" width="35" height="35" alt="">
                <span class="ms-2 fw-semibold align-middle">DROVE</span>
                <span class="badge bg-{{{badgeColor installationMetadata.installation.criticality}}} rounded-pill fw-bold" style="font-size: 60%; margin-left: 1em">
                    {{installationMetadata.installation.label}}
                </span>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown"
                    aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse justify-content-end" id="navbarNavDropdown">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="#">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Features</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Pricing</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                           aria-expanded="false">
                            Dropdown link
                        </a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#">Action</a></li>
                            <li><a class="dropdown-item" href="#">Another action</a></li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>
                        </ul>
                    </li>
                    <li class="nav-item dropdown">

                        <!--<button class="btn btn-link nav-link py-2 px-0 px-lg-2 dropdown-toggle d-flex align-items-center"
                                id="bd-theme"
                                type="button"
                                aria-expanded="false"
                                data-bs-toggle="dropdown"
                                data-bs-display="static"
                                aria-label="Toggle theme (auto)">
                            <i class="bi bi-circle-half" id="selected-theme-icon"></i>
                            <span class="d-lg-none ms-2" id="bd-theme-text">Toggle theme</span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="bd-theme-text">
                            <li>
                                <button type="button" class="dropdown-item d-flex align-items-center"
                                        data-icon="bi-sun-fill" data-bs-theme-value="light" aria-pressed="false">
                                    <i class="bi bi-sun-fill"></i>
                                    Light
                                </button>
                            </li>
                            <li>
                                <button type="button" class="dropdown-item d-flex align-items-center"
                                        data-icon="bi-moon-stars-fill" data-bs-theme-value="dark" aria-pressed="false">
                                    <i class="bi bi-moon-stars-fill"></i>
                                    Dark
                                </button>
                            </li>
                            <li>
                                <button type="button" class="dropdown-item d-flex align-items-center active"
                                        data-icon="bi-circle-half" data-bs-theme-value="auto" aria-pressed="true">
                                    <i class="bi bi-circle-half"></i>
                                    Auto
                                </button>
                            </li>
                        </ul>-->
                        <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                            <symbol id="circle-half" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 0 8 1v14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z"/>
                            </symbol>
                            <symbol id="moon-stars-fill" viewBox="0 0 16 16">
                                <path d="M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z"/>
                                <path d="M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.097-1.097l.387-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.863.1z"/>
                            </symbol>
                            <symbol id="sun-fill" viewBox="0 0 16 16">
                                <path d="M8 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z"/>
                            </symbol>
                        </svg>

                        <button class="btn btn-link nav-link py-2 px-0 px-lg-2 dropdown-toggle d-flex align-items-center"
                                id="bd-theme"
                                type="button"
                                aria-expanded="false"
                                data-bs-toggle="dropdown"
                                data-bs-display="static"
                                aria-label="Toggle theme (auto)">
                            <svg class="bi my-1 theme-icon-active"  fill="currentColor" width="16" height="19"><use href="#circle-half"></use></svg>
                            <span class="d-lg-none ms-2" id="bd-theme-text">Toggle theme</span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="bd-theme-text">
                            <li>
                                <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="light" aria-pressed="false">
                                    <svg class="bi me-2 opacity-50 theme-icon" fill="currentColor" width="16" height="19"><use href="#sun-fill"></use></svg>
                                    Light
                                    <svg class="bi ms-auto d-none"><use href="#check2"></use></svg>
                                </button>
                            </li>
                            <li>
                                <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="dark" aria-pressed="false">
                                    <svg class="bi me-2 opacity-50 theme-icon"  fill="currentColor" width="16" height="19"><use href="#moon-stars-fill"></use></svg>
                                    Dark
                                    <svg class="bi ms-auto d-none"><use href="#check2"></use></svg>
                                </button>
                            </li>
                            <li>
                                <button type="button" class="dropdown-item d-flex align-items-center active" data-bs-theme-value="auto" aria-pressed="true">
                                    <svg class="bi me-2 opacity-50 theme-icon"  fill="currentColor" width="16" height="19"><use href="#circle-half"></use></svg>
                                    Auto
                                    <svg class="bi ms-auto d-none"><use href="#check2"></use></svg>
                                </button>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>

        </div>
    </nav>
</header>
<main role="main" class="container-fluid">
    {{#if error}}
        <section>
            <div class="alert alert-danger" role="alert">
                <b>Error:</b> {{error}}
            </div>
        </section>
    {{/if}}
    {{#block "content"}}

    {{/block}}
</main>
<footer class="footer navbar fixed-bottom  footer-font pb-0 pt-0 bg-warning">
    <p class="col-md-4 mb-0 ms-2 text-black"><b><em>Version:</em></b> {{installationMetadata.version}}</p>

    <ul class="nav col-md-4 justify-content-end">
        <li class="nav-item"><a href="https://phonepe.github.io/drove-orchestrator" class="nav-link px-2 text-white"
                                target="_blank">Documentation</a></li>
        <li class="nav-item"><a href="https://github.com/PhonePe/drove-orchestrator" class="nav-link px-2 text-white"
                                target="_blank">Code</a></li>
        <li class="nav-item"><a href="https://www.apache.org/licenses/LICENSE-2.0" class="nav-link px-2 text-white"
                                target="_blank">License</a></li>
    </ul>
</footer>
<script src="/js/swal.js"></script>
<!--<script src="/js/jquery-3.3.1.min.js"></script>-->
<script src="/js/popper.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<!--<script type="text/javascript" src="/js/jquery.dataTables.min.js"></script>-->
<!--<script type="text/javascript" src="/js/datatables.bootstrap4.min.js"></script>-->
<script type="text/javascript" src="/js/datatables.min.js"></script>
<script src="/js/cookies.js"></script>
<script src="/js/toggler.min.js"></script>

{{#block "page_js_includes"}}

{{/block}}
<script language="JavaScript">
    (function() {
      'use strict';
      $.fn.dataTable.ext.errMode = 'none';

        $('#table').on( 'error.dt', function ( e, settings, techNote, message ) {
            console.log( 'An error has been reported by DataTables: ', message );
        } ) ;

      window.addEventListener( "pageshow", function ( event ) {
        var historyTraversal = event.persisted ||
                               ( typeof window.performance != "undefined" &&
                                    window.performance.navigation.type === 2 );
        if ( historyTraversal ) {
          // Handle page restore.
          window.location.reload();
        }
      });

      window.addEventListener('load', function() {
        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.getElementsByClassName('needs-validation');
        // Loop over them and prevent submission
        var validation = Array.prototype.filter.call(forms, function(form) {
          form.addEventListener('submit', function(event) {
            if (form.checkValidity() === false) {
              event.preventDefault();
              event.stopPropagation();
            }
            form.classList.add('was-validated');
          }, false);
        });
      }, false);
    })();
    DataTable.defaults.processing = false;
    DataTable.defaults.layout = {
            'top1' : [
                'search',
                'paging',
                'pageLength'
            ]
        };

    $(document).ready(function() {
    {{#block "page_js"}}

    {{/block}}

    function renderAppState(data, type, row, meta) {
        switch(data) {
            case 'INIT' : return '<span class="badge fw-bold bg-primary">Initializing</span>';
            case 'MONITORING' : return '<span class="badge fw-bold bg-info">Monitoring</span>';
            case 'RUNNING' : return '<span class="badge fw-bold bg-success">Running</span>';
            case 'OUTAGE_DETECTED' : return '<span class="badge fw-bold bg-danger">Outage Detected</span>';
            case 'SCALING_REQUESTED' : return '<span class="badge fw-bold bg-warning">Scaling</span>';
            case 'STOP_INSTANCES_REQUESTED' : return '<span class="badge fw-bold bg-warning">Stopping instances</span>';
            case 'REPLACE_INSTANCES_REQUESTED' : return '<span class="badge fw-bold bg-warning">Restarting</span>';
            case 'DESTROY_REQUESTED' : return '<span class="badge fw-bold bg-danger">Destruction Underway</span>';
            case 'DESTROYED' : return '<span class="badge fw-bold bg-danger">Destroyed</span>';
            case 'FAILED' : return '<span class="badge fw-bold bg-secondary">Failed</span>';
        }
    }

    function renderLocalServiceState(data, type, row, meta) {
        switch(data) {
            case 'INIT' : return '<span class="badge fw-bold bg-primary">Initializing</span>';
            case 'INACTIVE' : return '<span class="badge fw-bold bg-info">Inactive</span>';
            case 'ACTIVE' : return '<span class="badge fw-bold bg-success">Active</span>';
            case 'ACTIVATION_REQUESTED' : return '<span class="badge fw-bold bg-warning">Activation Requested</span>';
            case 'DEACTIVATION_REQUESTED' : return '<span class="badge fw-bold bg-warning">Deactivation Requested</span>';
            case 'ADJUSTING_INSTANCES' : return '<span class="badge fw-bold bg-warning">Adjusting Instances</span>';
            case 'REPLACING_INSTANCES' : return '<span class="badge fw-bold bg-warning">Replacing Instances</span>';
            case 'STOPPING_INSTANCES' : return '<span class="badge fw-bold bg-warning">Stopping Instances</span>';
            case 'DESTROY_REQUESTED' : return '<span class="badge fw-bold bg-danger">Destruction Underway</span>';
            case 'DESTROYED' : return '<span class="badge fw-bold bg-danger">Destroyed</span>';
        }
    }

    function renderInstanceState(data, type, row, meta) {
        switch(data) {
            case 'PENDING' : return '<span class="badge fw-bold bg-primary">Pending</span>';
            case 'PROVISIONING' : return '<span class="badge fw-bold bg-warning">Provisioning</span>';
            case 'PROVISIONING_FAILED' : return '<span class="badge fw-bold bg-danger">Provisioning Failed</span>';
            case 'STARTING' : return '<span class="badge fw-bold bg-warning">Starting</span>';
            case 'STARTING_FAILED' : return '<span class="badge fw-bold bg-danger">Start Failed</span>';
            case 'UNREADY' : return '<span class="badge fw-bold bg-warning">Unready</span>';
            case 'READINESS_CHECK_FAILED' : return '<span class="badge fw-bold bg-danger">Readiness Check Failed</span>';
            case 'READY' : return '<span class="badge fw-bold bg-warning">Ready</span>';
            case 'HEALTHY' : return '<span class="badge fw-bold bg-success">Healthy</span>';
            case 'UNHEALTHY' : return '<span class="badge fw-bold bg-danger">Unhealthy</span>';
            case 'DEPROVISIONING' : return '<span class="badge fw-bold bg-warning">Deprovisioning</span>';
            case 'STOPPING' : return '<span class="badge fw-bold bg-warning">Stopping</span>';
            case 'STOPPED' : return '<span class="badge fw-bold bg-secondary">Stopped</span>';
            case 'LOST' : return '<span class="badge fw-bold bg-secondary">Lost</span>';
            case 'UNKNOWN' : return '<span class="badge fw-bold bg-danger">UNKNOWN</span>';
        }
    }

    function renderTaskState(data, type, row, meta) {
        switch(data) {
            case 'PENDING' : return '<span class="badge fw-bold bg-primary">Pending</span>';
            case 'PROVISIONING' : return '<span class="badge fw-bold bg-warning">Provisioning</span>';
            case 'PROVISIONING_FAILED' : return '<span class="badge fw-bold bg-danger">Provisioning Failed</span>';
            case 'STARTING' : return '<span class="badge fw-bold bg-warning">Starting</span>';
            case 'STARTING_FAILED' : return '<span class="badge fw-bold bg-danger">Start Failed</span>';
            case 'RUNNING' : return '<span class="badge fw-bold bg-success">Running</span>';
            case 'RUN_FAILED' : return '<span class="badge fw-bold bg-danger">Run Failed</span>';
            case 'RUN_TIMEOUT' : return '<span class="badge fw-bold bg-success">Run Timed Out</span>';
            case 'RUN_COMPLETED' : return '<span class="badge fw-bold bg-danger">Run Completed</span>';
            case 'RUN_CANCELLED' : return '<span class="badge fw-bold bg-warning">Run Cancelled</span>';
            case 'DEPROVISIONING' : return '<span class="badge fw-bold bg-warning">Deprovisioning</span>';
            case 'STOPPING' : return '<span class="badge fw-bold bg-warning">Stopping</span>';
            case 'STOPPED' : return '<span class="badge fw-bold bg-secondary">Stopped</span>';
            case 'LOST' : return '<span class="badge fw-bold bg-secondary">Lost</span>';
            case 'UNKNOWN' : return '<span class="badge fw-bold bg-danger">UNKNOWN</span>';
        }
    }

    function renderExecutorState(data, type, row, meta) {
        switch(data) {
            case 'ACTIVE' : return '<span class="badge fw-bold bg-success">Active</span>';
            case 'BLACKLISTED' : return '<span class="badge fw-bold bg-warning">Blacklisted</span>';
            case 'UNREADY' : return '<span class="badge fw-bold bg-warning">Unready</span>';
            case 'REMOVED' : return '<span class="badge fw-bold bg-danger">Removed</span>';
        }
    }

    function updateResourceUsage(instances) {
        instances.forEach( (info, i) => {
            info.resources.forEach((r,i) => {
                if(r.type === 'CPU') {
                    info['usedCores'] = Object.values(r.cores).map(v => v.length).reduce((s,l) => s + l, 0);
                }
                if(r.type === 'MEMORY') {
                    info['usedMemory'] = Object.values(r.memoryInMB).reduce((s,m) => s + m, 0);
                }
            });
        });
        return instances;
    }

    function timeSince(data, type, row, meta) {
        if(type === "sort") return data;

        var date = new Date(data);

        var seconds = Math.floor((new Date() - date) / 1000);

        var interval = Math.floor(seconds / 31536000);

        if (interval > 1) {
            return interval + " years";
        }
        interval = Math.floor(seconds / 2592000);
        if (interval > 1) {
            return interval + " months";
        }
        interval = Math.floor(seconds / 86400);
        if (interval > 1) {
            return interval + " days";
        }
        interval = Math.floor(seconds / 3600);
        if (interval > 1) {
            return interval + " hours";
        }
        interval = Math.floor(seconds / 60);
        if (interval > 1) {
            return interval + " minutes";
        }
        return Math.floor(seconds) + " seconds";
    }

    function lifetime(data, type, row, meta) {
        if(type === "sort") return data;

        var created = new Date(row['created']);
        var updated = new Date(row['updated']);

        var seconds = Math.floor((updated - created) / 1000);

        var interval = Math.floor(seconds / 31536000);

        if (interval > 1) {
            return interval + " years";
        }
        interval = Math.floor(seconds / 2592000);
        if (interval > 1) {
            return interval + " months";
        }
        interval = Math.floor(seconds / 86400);
        if (interval > 1) {
            return interval + " days";
        }
        interval = Math.floor(seconds / 3600);
        if (interval > 1) {
            return interval + " hours";
        }
        interval = Math.floor(seconds / 60);
        if (interval > 1) {
            return interval + " minutes";
        }
        return Math.floor(seconds) + " seconds";
    }

    function formatBytes(data, type, row, meta) {
        if(type === 'display') {
            const decimals = 2;
            const bytes = data * 1024 * 1024;
            if (bytes === 0) return '0 Bytes';

            const k = 1024;
            const dm = decimals < 0 ? 0 : decimals;
            const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];

            const i = Math.floor(Math.log(bytes) / Math.log(k));

            return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
        }
        return data;
    }

	$('.data-table').DataTable({
		paging: false,
		ordering: false,
		info: false,
		"dom":' <"search"f><"top"l>rt<"bottom"ip><"clear">'
	});

	$('.post-button').on('click', function(e) {
	    e.preventDefault();
	    var data = new Object();
	    data[this.attr('data-field')] = this.attr('data-submit');
	    $.post(this.href, data, function() {
	        alert('Action complete');
	        location.reload();
	    });
	});

    $('form.confirmed-form').submit(function (e, params) {
        var localParams = params || {};

        if (!localParams.send) {
            e.preventDefault();

            var form = $(this);
            Swal.fire({
                    title: form.attr('data-cnf-title'),
                    text: form.attr('data-cnf-text'),
                    type: "warning",
                    showCancelButton: true,
                    focusConfirm: false,
                    confirmButtonColor: "#6A9944",
                    confirmButtonText: "Confirm",
                    cancelButtonText: "Cancel",
                    closeOnConfirm: true
                }).then(function (result) {
                    if (result.value) {
                        $(e.currentTarget).trigger(e.type, { 'send': true });
                    }
                });
        }
    });

});


</script>
</body>
</html>