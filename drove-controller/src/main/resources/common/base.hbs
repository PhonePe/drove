<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <meta name="viewport" content="width=device-width" />
    <!--<link rel="icon" href="favicon.ico">-->

    <title>D R O V E</title>

    <link href="/css/bootstrap.min.css" rel="stylesheet">
<!--    <link href="/css/bootstrap-icons.min.css" rel="stylesheet">-->
    <link href="/css/datatables.min.css" rel="stylesheet">

    {{#block "page_css_includes"}}

    {{/block}}
    <link href="/css/drove.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <style>
    {{#block "page_css"}}

    {{/block}}
    </style>
</head>
<body>
<header>

    <nav class="navbar navbar-expand-lg" id="topbar">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">
                <svg width="35" height="35"  fill="currentColor" alt="" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                     viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve">
                    <g>
                        <g>
                            <path d="M397.384,82.589c-2.565-16.131-11.257-30.297-24.478-39.89c-13.22-9.594-29.388-13.466-45.515-10.899
                                c-16.131,2.565-30.297,11.257-39.891,24.479c-18.324,25.253-16.046,105.909-15.726,115.024c0.086,2.469,1.305,4.762,3.306,6.213
                                c1.982,1.438,4.577,1.894,6.932,1.216c8.763-2.522,86.15-25.376,104.474-50.628C396.077,114.884,399.948,98.719,397.384,82.589z
                                 M373.495,118.679c0,0.001,0,0.001,0,0.001c-11.192,15.425-59.117,33.094-85.898,41.584c-0.235-28.094,1.699-79.137,12.891-94.561
                                c7.075-9.75,17.525-16.162,29.422-18.054c2.398-0.38,4.796-0.569,7.178-0.569c9.436,0,18.606,2.959,26.392,8.608
                                c9.75,7.075,16.162,17.524,18.054,29.421C383.426,97.007,380.572,108.929,373.495,118.679z"/>
                        </g>
                    </g>
                    <g>
                        <g>
                            <path d="M237.119,186.919c-1.969-3.738-49.032-91.824-119.057-113.538C76.286,60.427,15.41,78.38,2.472,120.103
                                c-12.938,41.722,27.102,90.965,68.878,103.919c12.406,3.847,26.166,5.776,41.105,5.776c7.012,0,14.287-0.425,21.797-1.277
                                c4.403-0.5,7.567-4.473,7.068-8.878c-0.5-4.403-4.482-7.558-8.878-7.068c-21.288,2.417-40.245,1.109-56.338-3.88
                                c-16.97-5.263-34.185-18.1-46.05-34.342C17.74,157.496,13.273,139.456,17.8,124.856c4.527-14.6,18.417-26.948,38.108-33.881
                                c18.971-6.681,40.429-7.527,57.4-2.265c52.644,16.324,92.891,77.383,105.48,98.474c-11.272,5.204-34.122,14.831-60.676,20.932
                                c-4.319,0.993-7.016,5.298-6.023,9.617s5.3,7.017,9.617,6.023c39.784-9.141,70.752-25.314,72.051-25.998
                                C237.621,195.724,239.156,190.79,237.119,186.919z"/>
                        </g>
                    </g>
                    <g>
                        <g>
                            <path d="M253.117,461.176c-30.44-28.737-48.734-69.214-50.195-111.052c-0.114-3.291-2.311-6.252-5.426-7.315
                                c-3.322-1.133-7.102,0.088-9.136,2.949c-36.884,51.961-65.859,99.991-66.147,100.469c-2.849,4.734,0.017,11.046,5.438,12.033
                                c0.551,0.101,55.747,10.085,119.12,16.731c3.386,0.351,6.707-1.536,8.129-4.63C256.321,467.267,255.591,463.512,253.117,461.176z
                                 M142.124,444.474c8.709-14.02,25.917-41.205,46.952-71.733c5.04,30.681,18.215,59.83,37.915,83.885
                                C190.186,452.246,158.405,447.201,142.124,444.474z"/>
                        </g>
                    </g>
                    <g>
                        <g>
                            <path d="M447.984,443.393c-2.638-0.859-5.073-1.712-7.449-2.608c-42.249-15.946-75.76-47.391-94.358-88.54
                                c-18.599-41.15-20.06-87.08-4.115-129.328c0.856-2.268,1.767-4.515,2.719-6.744c0.866-2.026,1.201-4.093,0.504-6.234
                                c-1.3-3.987-5.604-6.333-9.66-5.276c-7.69,2.013-15.258,4.693-22.492,7.962c-18.854,8.521-41.953,29.026-70.616,62.689
                                c-0.784,0.921-1.351,2.008-1.656,3.18c-10.088,38.727-6.531,80.217,10.015,116.824c16.547,36.609,45.34,66.693,81.074,84.708
                                c1.081,0.545,2.27,0.838,3.48,0.858c3.553,0.059,7.018,0.088,10.397,0.088c38.658,0,65.977-3.834,83.316-11.671
                                c7.234-3.269,14.245-7.179,20.84-11.623C455.424,454.012,454.209,445.42,447.984,443.393z M422.536,454.677
                                c-16.171,7.308-44.773,10.741-84.983,10.19c-65.239-33.837-99.316-109.234-81.61-180.561
                                c26.172-30.557,47.631-49.749,63.801-57.057c1.473-0.665,2.961-1.303,4.464-1.913c-29.559,90.67,15.127,189.533,102.716,227.254
                                C425.472,453.316,424.009,454.012,422.536,454.677z"/>
                        </g>
                    </g>
                    <g>
                        <g>
                            <path d="M499.477,282.957c-7.989-17.676-19.258-33.204-33.497-46.154c-3.277-2.984-8.354-2.743-11.335,0.537
                                c-2.981,3.277-2.741,8.354,0.537,11.334c12.608,11.467,22.59,25.225,29.671,40.892c17.411,38.526,13.932,83.661-8.872,119.087
                                c-5.039-1.262-10.022-2.82-14.871-4.65c-68.944-26.022-103.864-103.283-77.843-172.228c1.832-4.851,3.954-9.622,6.337-14.238
                                c13.914,2.086,27.28,6.475,39.802,13.073c3.92,2.065,8.773,0.563,10.839-3.358c2.067-3.92,0.563-8.773-3.358-10.839
                                c-15.904-8.382-33.017-13.6-50.864-15.512c-3.179-0.35-6.256,1.238-7.833,4.017c-3.842,6.769-7.185,13.898-9.937,21.19
                                c-29.146,77.224,9.966,163.76,87.191,192.909c7.29,2.752,14.851,4.953,22.471,6.541c3.098,0.646,6.366-0.642,8.192-3.226
                                c13.917-19.699,22.606-42.789,25.129-66.772C513.837,330.837,509.77,305.731,499.477,282.957z"/>
                        </g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>
                    <g>
                    </g>

                </svg>
                <span class="ms-2 fw-semibold align-middle">DROVE</span>
                <span class="badge bg-{{{badgeColor installationMetadata.installation.criticality}}} rounded-pill fw-bold" style="font-size: 60%; margin-left: 1em">
                    {{installationMetadata.installation.label}}
                </span>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown"
                    aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse justify-content-end" id="navbarNavDropdown">
                <ul class="navbar-nav">
                    <li class="nav-item dropdown">
                        <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                            <symbol id="circle-half" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 0 8 1v14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z"/>
                            </symbol>
                            <symbol id="moon-stars-fill" viewBox="0 0 16 16">
                                <path d="M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z"/>
                                <path d="M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.097-1.097l.387-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.863.1z"/>
                            </symbol>
                            <symbol id="sun-fill" viewBox="0 0 16 16">
                                <path d="M8 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z"/>
                            </symbol>
                        </svg>

                        <button class="btn btn-link nav-link py-2 px-0 px-lg-2 dropdown-toggle d-flex align-items-center"
                                id="bd-theme"
                                type="button"
                                aria-expanded="false"
                                data-bs-toggle="dropdown"
                                data-bs-display="static"
                                aria-label="Toggle theme (auto)">
                            <svg class="bi my-1 theme-icon-active"  fill="currentColor" width="16" height="19"><use href="#circle-half"></use></svg>
                            <span class="d-lg-none ms-2" id="bd-theme-text">Toggle theme</span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end me-4" aria-labelledby="bd-theme-text">
                            <li>
                                <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="light" aria-pressed="false">
                                    <svg class="bi me-2 opacity-50 theme-icon" fill="currentColor" width="16" height="19"><use href="#sun-fill"></use></svg>
                                    Light
                                    <svg class="bi ms-auto d-none"><use href="#check2"></use></svg>
                                </button>
                            </li>
                            <li>
                                <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="dark" aria-pressed="false">
                                    <svg class="bi me-2 opacity-50 theme-icon"  fill="currentColor" width="16" height="19"><use href="#moon-stars-fill"></use></svg>
                                    Dark
                                    <svg class="bi ms-auto d-none"><use href="#check2"></use></svg>
                                </button>
                            </li>
                            <li>
                                <button type="button" class="dropdown-item d-flex align-items-center active" data-bs-theme-value="auto" aria-pressed="true">
                                    <svg class="bi me-2 opacity-50 theme-icon"  fill="currentColor" width="16" height="19"><use href="#circle-half"></use></svg>
                                    Auto
                                    <svg class="bi ms-auto d-none"><use href="#check2"></use></svg>
                                </button>
                            </li>
                        </ul>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
                           aria-expanded="false">
                            Documentation
                        </a>
                        <ul class="dropdown-menu">
                            <li>
                                <a href="https://pypi.org/project/drove-cli/" class="dropdown-item"
                                                                     target="_blank">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-terminal me-1" viewBox="0 0 16 16">
                                        <path d="M6 9a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3A.5.5 0 0 1 6 9M3.854 4.146a.5.5 0 1 0-.708.708L4.793 6.5 3.146 8.146a.5.5 0 1 0 .708.708l2-2a.5.5 0 0 0 0-.708z"/>
                                        <path d="M2 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2zm12 1a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1z"/>
                                    </svg>
                                    Drove CLI
                                </a>
                            </li>
                            <li>
                                <a href="https://phonepe.github.io/drove-orchestrator" class="dropdown-item"
                                                                     target="_blank">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-globe me-1" viewBox="0 0 16 16">
                                        <path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m7.5-6.923c-.67.204-1.335.82-1.887 1.855A8 8 0 0 0 5.145 4H7.5zM4.09 4a9.3 9.3 0 0 1 .64-1.539 7 7 0 0 1 .597-.933A7.03 7.03 0 0 0 2.255 4zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a7 7 0 0 0-.656 2.5zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5zM8.5 5v2.5h2.99a12.5 12.5 0 0 0-.337-2.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5zM5.145 12q.208.58.468 1.068c.552 1.035 1.218 1.65 1.887 1.855V12zm.182 2.472a7 7 0 0 1-.597-.933A9.3 9.3 0 0 1 4.09 12H2.255a7 7 0 0 0 3.072 2.472M3.82 11a13.7 13.7 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5zm6.853 3.472A7 7 0 0 0 13.745 12H11.91a9.3 9.3 0 0 1-.64 1.539 7 7 0 0 1-.597.933M8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855q.26-.487.468-1.068zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.7 13.7 0 0 1-.312 2.5m2.802-3.5a7 7 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7 7 0 0 0-3.072-2.472c.218.284.418.598.597.933M10.855 4a8 8 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4z"/>
                                    </svg>
                                    Website
                                </a>
                            </li>
                            <li>
                                <a href="https://github.com/PhonePe/drove-orchestrator" class="dropdown-item"
                                                    target="_blank">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-github me-1" viewBox="0 0 16 16">
                                        <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27s1.36.09 2 .27c1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.01 8.01 0 0 0 16 8c0-4.42-3.58-8-8-8"/>
                                    </svg>
                                    Code
                                </a>
                            </li>
                            <li>
                                <a href="https://www.apache.org/licenses/LICENSE-2.0" class="dropdown-item"
                                                    target="_blank">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-text me-1" viewBox="0 0 16 16">
                                        <path d="M5 4a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1zm-.5 2.5A.5.5 0 0 1 5 6h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5M5 8a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1zm0 2a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1z"/>
                                        <path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2zm10-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1"/>
                                    </svg>
                                    License
                                </a>
                            </li>

                        </ul>
                    </li>
                </ul>
            </div>

        </div>
    </nav>
</header>
<main role="main" class="container-fluid pb-6 mb-5">
    {{#if error}}
        <section>
            <div class="alert alert-danger" role="alert">
                <b>Error:</b> {{error}}
            </div>
        </section>
    {{/if}}
    {{#block "content"}}

    {{/block}}
</main>
<footer class="footer navbar fixed-bottom  footer-font pb-0 pt-0 justify-content-end">
    <span class="badge bg-primary m-1">
        <span class="fw-bold">Version:</span> {{installationMetadata.version}}
    </span>
</footer>
<script type="text/template" data-template="progress">
    <div class="progress" role="progressbar" aria-valuenow="${currentValue}" aria-valuemin="${minValue}" aria-valuemax="${maxValue}">
        <div class="progress-bar bg-${theme} overflow-visible " style="width: ${percentage}%">${currentValue}/${maxValue}</div>
    </div>
</script>
<script type="text/template" data-template="progress-with-description-text">
    <div class="row">
        <div class="col">
            <div class="progress" role="progressbar" aria-valuenow="${currentValue}" aria-valuemin="${minValue}" aria-valuemax="${maxValue}">
                <div class="progress-bar bg-${theme}" style="width: ${percentage}%"></div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <span style="font-size: smaller">${message}</span>
        </div>
    </div>
</script>
<script type="text/template" data-template="progress-with-text">
    <div class="progress  position-relative" role="progressbar" aria-valuenow="${currentValue}" aria-valuemin="${minValue}" aria-valuemax="${maxValue}" style="font-size: smaller">
        <div class="progress-bar  bg-${theme}" style="width: ${percentage}%"></div>
        <small class="justify-content-center d-flex position-absolute w-100  text-body fw-bold">${message}</small>
    </div>
</script>

<script type="text/template" data-template="copyable-text">
    <span class="copyable">${text}</span>
    <a class="ms-3 copy-button text-body" data-bs-toggle="tooltip" data-bs-placement="top" title="Copy to clipboard">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z"/>
        </svg>
    </a>
</script>
<script type="text/template" data-template="copyable-link">
    <a class="copyable" href="${link}">${text}</a>
    <a class="ms-3 copy-button text-body" data-bs-toggle="tooltip" data-bs-placement="top" title="Copy to clipboard">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z"/>
        </svg>
    </a>
</script>

<script src="/js/swal.js"></script>
<script src="/js/popper.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script type="text/javascript" src="/js/datatables.min.js"></script>
<script src="/js/cookies.min.js"></script>
<script src="/js/toggler.min.js"></script>

{{#block "page_js_includes"}}

{{/block}}
<script language="JavaScript">
    (function() {
      'use strict';
      $.fn.dataTable.ext.errMode = 'none';

        $('#table').on( 'error.dt', function ( e, settings, techNote, message ) {
            console.log( 'An error has been reported by DataTables: ', message );
        } ) ;

      window.addEventListener( "pageshow", function ( event ) {
        const historyTraversal = event.persisted ||
                               ( typeof window.performance != "undefined" &&
                                    window.performance.navigation.type === 2 );
        if ( historyTraversal ) {
          // Handle page restore.
          window.location.reload();
        }
      });

    })();


    $.extend( $.fn.DataTable.defaults, {
            processing: false,
            responsive: true,
            layout: {
                'top1' : [
                    'search',
                    'paging',
                    'pageLength'
                ]
            }
        })


    $(document).ready(function() {
    {{#block "page_js"}}

    {{/block}}
    // The following is lifted from: https://stackoverflow.com/questions/18673860/defining-a-html-template-to-append-using-jquery
    // Don't want to introduce a full templating engine as of now
    // Begin
    //Convert map to array
    function mapToArray(props) {
        return function(tok, i) {
            return (i % 2) ? props[tok] : tok;
        };
    }

    // Render text template with values
    function renderTemplateHtml(templateName, rows) {
        const itemTpl = $('script[data-template=' + templateName + ']').text();
        return rows.map(item => itemTpl.replace(/\$\{(.+?)\}/g, (match, p1) => item[p1] || '')).join('');
    }

    function renderTemplate(templateName, rows, target) {
        $(target).html(renderTemplateHtml(templateName, rows));
    }
    // End

    if (!String.prototype.format) {
        String.prototype.format = function() {
            const args = arguments;
            return this.replace(/{(\d+)}/g, function(match, number) {
                return typeof args[number] != 'undefined' ? args[number] : match;
            });
        };
    }

    function renderProgressHtml(templateName, currentValue, minValue, maxValue, message) {
        const percentage = maxValue == minValue
            ? 0
            : (currentValue - minValue) / (maxValue - minValue) * 100;
        var theme = 'success';
        if(percentage >= 50 && percentage <= 75) {
            theme = 'warning';
        }
        else if(percentage > 75) {
            theme = 'danger';
        }
        message = message || `${currentValue}/${maxValue}`;
        return renderTemplateHtml(
            templateName,
            [{
                currentValue: currentValue,
                minValue: minValue,
                maxValue: maxValue,
                percentage: percentage,
                theme: theme,
                message: message
            }]);
    }

    function renderProgress(templateName, currentValue, minValue, maxValue, target, message) {
        $(target).html(renderProgressHtml(templateName, currentValue, minValue, maxValue, message));
    }

    function renderCopyableText(text) {
        return renderTemplateHtml('copyable-text', [{text: text}]);
    }

    function renderCopyableLink(text, href) {
        return renderTemplateHtml('copyable-link', [{text: text, link: href}]);
    }

    function copyableTableText(data, type, row, meta) {
        return renderCopyableText(data);
    }

    function tableDateText(data, type, row, meta) {
        return new Date(data).toLocaleString();
    }

    function tableBytesText(data, type, row, meta) {
        return type === 'display' ? bytesToString(data) : data;
    }

    function tableAppStateText(data, type, row, meta) {
        return appStateToHtml(data);
    }

    function tableLocalServiceStateText(data, type, row, meta) {
        return localServiceStateToHtml(data)
    }

    function tableInstanceStateText(data, type, row, meta) {
        return instanceStateToHtml(data);
    }

    function tableTaskStateText(data, type, row, meta) {
        return taskStateToHtml(data);
    }

    function tableExecutorStateText(data, type, row, meta) {
        return executorStateToHtml(data);
    }

    function tableExecutorLink(data, type, row, meta) {
        if(type === "display") {
            return renderCopyableLink(data, '/executors/{0}'.format(data));
        }
        return data;
    }

    function tableAgeText(data, type, row, meta) {
        if(type === "sort") return data;
        return '<span  data-bs-toggle="tooltip" data-bs-placement="top" title="{0}">{1}</span>'
                .format(new Date(data).toLocaleString(), ageInWords(data));
    }

    function tableCreatedAgeText(data, type, row, meta) {
        if(type === "sort") return data;
        return '<span  data-bs-toggle="tooltip" data-bs-placement="top" title="Created at {0}">{1}</span>'
                .format(new Date(data).toLocaleString(), ageInWords(data));
    }

    function tableUpdatedAgeText(data, type, row, meta) {
        if(type === "sort") return data;
        return '<span  data-bs-toggle="tooltip" data-bs-placement="top" title="Updated at {0}">{1} ago</span>'
                .format(new Date(data).toLocaleString(), ageInWords(data));
    }

    //Transformers
    function appStateToHtml(state) {
        switch(state) {
            case 'INIT' : return '<span class="badge fw-bold bg-primary">Initializing</span>';
            case 'MONITORING' : return '<span class="badge fw-bold bg-info">Monitoring</span>';
            case 'RUNNING' : return '<span class="badge fw-bold bg-success">Running</span>';
            case 'OUTAGE_DETECTED' : return '<span class="badge fw-bold bg-danger">Outage Detected</span>';
            case 'SCALING_REQUESTED' : return '<span class="badge fw-bold bg-warning">Scaling</span>';
            case 'STOP_INSTANCES_REQUESTED' : return '<span class="badge fw-bold bg-warning">Stopping instances</span>';
            case 'REPLACE_INSTANCES_REQUESTED' : return '<span class="badge fw-bold bg-warning">Restarting</span>';
            case 'DESTROY_REQUESTED' : return '<span class="badge fw-bold bg-danger">Destruction Underway</span>';
            case 'DESTROYED' : return '<span class="badge fw-bold bg-danger">Destroyed</span>';
            case 'FAILED' : return '<span class="badge fw-bold bg-secondary">Failed</span>';
        }
    }

    function localServiceStateToHtml(state) {
        switch(state) {
            case 'INIT' : return '<span class="badge fw-bold bg-primary">Initializing</span>';
            case 'INACTIVE' : return '<span class="badge fw-bold bg-info">Inactive</span>';
            case 'ACTIVE' : return '<span class="badge fw-bold bg-success">Active</span>';
            case 'ACTIVATION_REQUESTED' : return '<span class="badge fw-bold bg-warning">Activation Requested</span>';
            case 'DEACTIVATION_REQUESTED' : return '<span class="badge fw-bold bg-warning">Deactivation Requested</span>';
            case 'ADJUSTING_INSTANCES' : return '<span class="badge fw-bold bg-warning">Adjusting Instances</span>';
            case 'REPLACING_INSTANCES' : return '<span class="badge fw-bold bg-warning">Replacing Instances</span>';
            case 'STOPPING_INSTANCES' : return '<span class="badge fw-bold bg-warning">Stopping Instances</span>';
            case 'DESTROY_REQUESTED' : return '<span class="badge fw-bold bg-danger">Destruction Underway</span>';
            case 'DESTROYED' : return '<span class="badge fw-bold bg-danger">Destroyed</span>';
        }
    }

    function instanceStateToHtml(state) {
        switch(state) {
            case 'PENDING' : return '<span class="badge fw-bold bg-primary">Pending</span>';
            case 'PROVISIONING' : return '<span class="badge fw-bold bg-warning">Provisioning</span>';
            case 'PROVISIONING_FAILED' : return '<span class="badge fw-bold bg-danger">Provisioning Failed</span>';
            case 'STARTING' : return '<span class="badge fw-bold bg-warning">Starting</span>';
            case 'STARTING_FAILED' : return '<span class="badge fw-bold bg-danger">Start Failed</span>';
            case 'UNREADY' : return '<span class="badge fw-bold bg-warning">Unready</span>';
            case 'READINESS_CHECK_FAILED' : return '<span class="badge fw-bold bg-danger">Readiness Check Failed</span>';
            case 'READY' : return '<span class="badge fw-bold bg-warning">Ready</span>';
            case 'HEALTHY' : return '<span class="badge fw-bold bg-success">Healthy</span>';
            case 'UNHEALTHY' : return '<span class="badge fw-bold bg-danger">Unhealthy</span>';
            case 'DEPROVISIONING' : return '<span class="badge fw-bold bg-warning">Deprovisioning</span>';
            case 'STOPPING' : return '<span class="badge fw-bold bg-warning">Stopping</span>';
            case 'STOPPED' : return '<span class="badge fw-bold bg-secondary">Stopped</span>';
            case 'LOST' : return '<span class="badge fw-bold bg-secondary">Lost</span>';
            case 'UNKNOWN' : return '<span class="badge fw-bold bg-danger">UNKNOWN</span>';
        }
    }

    function taskStateToHtml(state) {
        switch(state) {
            case 'PENDING' : return '<span class="badge fw-bold bg-primary">Pending</span>';
            case 'PROVISIONING' : return '<span class="badge fw-bold bg-warning">Provisioning</span>';
            case 'PROVISIONING_FAILED' : return '<span class="badge fw-bold bg-danger">Provisioning Failed</span>';
            case 'STARTING' : return '<span class="badge fw-bold bg-warning">Starting</span>';
            case 'STARTING_FAILED' : return '<span class="badge fw-bold bg-danger">Start Failed</span>';
            case 'RUNNING' : return '<span class="badge fw-bold bg-success">Running</span>';
            case 'RUN_FAILED' : return '<span class="badge fw-bold bg-danger">Run Failed</span>';
            case 'RUN_TIMEOUT' : return '<span class="badge fw-bold bg-success">Run Timed Out</span>';
            case 'RUN_COMPLETED' : return '<span class="badge fw-bold bg-danger">Run Completed</span>';
            case 'RUN_CANCELLED' : return '<span class="badge fw-bold bg-warning">Run Cancelled</span>';
            case 'DEPROVISIONING' : return '<span class="badge fw-bold bg-warning">Deprovisioning</span>';
            case 'STOPPING' : return '<span class="badge fw-bold bg-warning">Stopping</span>';
            case 'STOPPED' : return '<span class="badge fw-bold bg-secondary">Stopped</span>';
            case 'LOST' : return '<span class="badge fw-bold bg-secondary">Lost</span>';
            case 'UNKNOWN' : return '<span class="badge fw-bold bg-danger">UNKNOWN</span>';
        }
    }

    function executorStateToHtml(state) {
        switch(state) {
            case 'ACTIVE':
                return '<span class="badge bg-success fw-bold">ACTIVE</span>';
            case 'UNREADY':
                return '<span class="badge bg-warning fw-bold">UNREADY</span>';
            case 'BLACKLISTED':
                return '<span class="badge bg-danger fw-bold">BLACKLISTED</span>';
            case 'REMOVED':
                return '<span class="badge bg-danger fw-bold">REMOVED</span>';
            default:
                return '<span class="badge bg-secondary fw-bold">UNKNOWN</span>';
        }
    }

    function updateResourceUsage(instances) {
        instances.forEach( (info, i) => {
            info.resources.forEach((r,i) => {
                if(r.type === 'CPU') {
                    info['usedCores'] = Object.values(r.cores).map(v => v.length).reduce((s,l) => s + l, 0);
                }
                if(r.type === 'MEMORY') {
                    info['usedMemory'] = Object.values(r.memoryInMB).reduce((s,m) => s + m, 0);
                }
            });
        });
        return instances;
    }

    function lifetime(data, type, row, meta) {
        if(type === "sort") return data;

        var created = new Date(row['created']);
        var updated = new Date(row['updated']);
        return durationToWords(updated - created)
    }

    function ageInWords(data) {
        const date = new Date(data);
        return durationToWords(new Date() - date);
    }

    function durationToWords(duration) {
        const seconds = Math.floor(duration / 1000);

        var interval = Math.floor(seconds / 31536000);

        if (interval > 1) {
            return interval + " years";
        }
        interval = Math.floor(seconds / 2592000);
        if (interval > 1) {
            return interval + " months";
        }
        interval = Math.floor(seconds / 86400);
        if (interval > 1) {
            return interval + " days";
        }
        interval = Math.floor(seconds / 3600);
        if (interval > 1) {
            return interval + " hours";
        }
        interval = Math.floor(seconds / 60);
        if (interval > 1) {
            return interval + " minutes";
        }
        return Math.floor(seconds) + " seconds";
    }

    function bytesToString(data) {
        const decimals = 2;
        const bytes = data * 1024 * 1024;
        if (bytes === 0) return '0 Bytes';

        const k = 1024;
        const dm = decimals < 0 ? 0 : decimals;
        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];

        const i = Math.floor(Math.log(bytes) / Math.log(k));

        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
    }

    $(document).on('click', '.copy-button', function (e) {
        const text = $(this).parent().find('.copyable').text();
        if(text) {
            navigator.clipboard.writeText(text).then(function() {
                Swal.fire({
                    title: 'Copied!',
                    showConfirmButton: false,
                    timer: 1000
                });
            }, function(err) {
                Swal.fire({
                    title: 'Failed to copy',
                    showConfirmButton: false,
                    timer: 1000
                });
            });
        }
    });

});


</script>
</body>
</html>