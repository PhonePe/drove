{{#partial "content"}}
    <section>
        <div class="row">
            <div class="col">
                <table class="table table-bordered" id="executorSummary">
                    <thead>
                    <tr>
                        <th>ID</th>
                        <th>Hostname</th>
                        <th>Port</th>
                        <th>Used CPU Cores</th>
                        <th>Free CPU Cores</th>
                        <th>Used Memory</th>
                        <th>Free Memory</th>
                        <th>Tags</th>
                        <th>Status</th>
                    </tr>
                    </thead>
                </table>
            </div>
        </div>
    </section>
    <section>
        <div class="row">
            <div class="col">
                <div class="row">
                    <div class="col"><h4>Instances</h4></div>
                </div>
                <div class="row">
                    <div class="col">
                        <table class="table table-bordered" id="instances">
                            <thead>
                            <tr>
                                <th>ID</th>
                                <th>App Id</th>
                                <th>Port</th>
                                <th>Cores</th>
                                <th>Memory</th>
                                <th>Current Age</th>
                                <th>Created</th>
                                <th>Last Updated</th>
                                <th>State</th>
                                <th></th>
                            </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section>
        <div class="row">
            <div class="col">
                <div class="row">
                    <div class="col"><h4>Tasks</h4></div>
                </div>
                <div class="row">
                    <div class="col">
                        <table class="table table-bordered" id="tasks">
                            <thead>
                            <tr>
                                <th>Instance ID</th>
                                <th>Source App</th>
                                <th>Task ID</th>
                                <th>Cores</th>
                                <th>Memory</th>
                                <th>Current Age</th>
                                <th>Created</th>
                                <th>Last Updated</th>
                                <th>State</th>
                                <th></th>
                            </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
{{/partial}}

{{#partial "page_js"}}
    var summary = $('#executorSummary').DataTable({
        'processing' : true,
        'paging': false,
        'searching' : false,
        'ordering' : false,
        'info' : false,
        'columnDefs': [ {'className': 'nowrap', 'targets': '_all'} ],

        'columns' : [
            { 'data' : 'executorId' },
            { 'data' : 'hostname' },
            { 'data' : 'port' },
            { 'data' : 'usedCores' },
            { 'data' : 'freeCores' },
            { 'data' : 'usedMemory', 'render' : formatBytes },
            { 'data' : 'freeMemory', 'render' : formatBytes },
            {
                'data' : 'tags',
                'render' : function(data, type, row, meta) {
                    var tagStr = "";
                    if(!data) {
                        return tagStr;
                    }
                    data.sort();
                    for(var i = 0; i < data.length; i++) {
                        tagStr += '<span class="badge badge-secondary">' + data[i] + '</span> ';
                    }
                    return tagStr;
                }
            },
            { 'data' : 'blacklisted',
                'render' : function(data, type, row, meta) {
                    return data
                            ? '<span class="badge badge-danger">BLACKLISTED</span>'
                            : '<span class="badge badge-success">ONLINE</span>';
                }
            }
        ]
    });
    function executorDataTransformer(res) {
        if(!res || !res.data) {
            console.error("No data");
            return [];
        }
        var data = res.data;
        var esum = {};
        esum['executorId'] = data.state.executorId;
        esum['hostname'] = data.hostname;
        esum['port'] = data.port;
        esum['port'] = data.port;
        var uc = data.state.cpus.usedCores;
        esum['usedCores'] = Object.values(uc).map(v => v.length).reduce((acc, v) => acc + v, 0);
        var fc = data.state.cpus.freeCores;
        esum['freeCores'] = Object.values(fc).map(v => v.length).reduce((acc, v) => acc + v, 0);
        esum['usedMemory'] = Object.values(data.state.memory.usedMemory).reduce((acc, v) => acc + v, 0);
        esum['freeMemory'] = Object.values(data.state.memory.freeMemory).reduce((acc, v) => acc + v, 0);
        esum['tags'] = data.tags;
        esum['blacklisted'] = data.blacklisted;
        summary.clear();
        summary.rows.add([esum]).draw();

        var instances = res.data.instances;
        instances.forEach( (info, i) => {
                if(info.localInfo) {
                    info['hostname'] = info.localInfo.hostname;
                    info['ports'] = Object.keys(info.localInfo.ports)
                        .map(key => '<b>' + key + ':</b> ' + info.localInfo.ports[key].hostPort)
                        .join(",");
            }
            else {
                info['hostname'] = '';
                info['ports'] = '';
            }
            updateResourceUsage(instances);
            info['logStream'] = "/apis/v1/logs/" + info['appId'] + "/" + info['instanceId'];
        });
        return instances;
    }

    var ii = $('#instances').DataTable({
        'processing' : true,
        'paging': true,
        'dom' : "<'row'<'col-sm-12 col-md-2 float-left'f><'col-sm-10 col-md-9 float-right'p><'col-md-1 col-sm-3'l>><'row'<'col-sm-12'tr>>",
        'info' : false,
        'columns' : [
                { 'data' : 'instanceId' },
                { 'data' : 'appId',
                    'render' : function(data, type, row, meta) {
                        return '<a href="/applications/' + data + '">' + data + '</a>';
                    }
                },
                { 'data' : 'ports' },
                { 'data' : 'usedCores' },
                { 'data' : 'usedMemory', 'render' : formatBytes },
                { 'data' : 'created', 'render' : timeSince },
                { 'data' : 'created', 'render' : function(data, type, row, meta) { return new Date(data).toLocaleString(); } },
                { 'data' : 'updated', 'render' : function(data, type, row, meta) { return new Date(data).toLocaleString(); } },
                { 'data' : 'state', 'render' : renderInstanceState },
                { 'data' : 'logStream',
                  'render' : function(data, type, row, meta) {
                    return '<a href="/applications/' + row['appId'] + '/instances/' + row['instanceId'] + '">Details</a>';
                  }
                }
            ],
            'order' : [[5, 'desc']],
            'ajax' : {
               'url' : '/apis/v1/cluster/executors/{{executorId}}',
               'dataSrc' : executorDataTransformer
            }
    });
    var ti = $('#tasks').DataTable({
        'processing' : true,
        'paging': true,
        'dom' : "<'row'<'col-sm-12 col-md-2 float-left'f><'col-sm-10 col-md-9 float-right'p><'col-md-1 col-sm-3'l>><'row'<'col-sm-12'tr>>",
        'info' : false,
        'columns' : [
                { 'data' : 'instanceId' },
                { 'data' : 'sourceAppName' },
                { 'data' : 'taskId' },
                { 'data' : 'usedCores' },
                { 'data' : 'usedMemory', 'render' : formatBytes },
                { 'data' : 'created', 'render' : timeSince },
                { 'data' : 'created', 'render' : function(data, type, row, meta) { return new Date(data).toLocaleString(); } },
                { 'data' : 'updated', 'render' : function(data, type, row, meta) { return new Date(data).toLocaleString(); } },
                { 'data' : 'state', 'render' : renderTaskInstanceState },
                { 'data' : 'logStream',
                  'render' : function(data, type, row, meta) {
                    return '<a href="/tasks/' + row['sourceAppName'] + '/' + row['taskId'] + '">Details</a>';
                  }
                }
            ],
            'order' : [[5, 'desc']],
            'ajax' : {
               'url' : '/apis/v1/cluster/executors/{{executorId}}',
               'dataSrc' : res => updateResourceUsage((!res || !res.data) ? [] : res.data.taskInstances)
            }
    });

    //loadExecutorSnapshot();

    setInterval(() => {
        //loadExecutorSnapshot();
        ii.ajax.reload(null, false);
        ti.ajax.reload(null, false);
    }, 3000);

{{/partial}}
{{> common/base}}