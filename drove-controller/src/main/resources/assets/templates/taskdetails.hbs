{{#partial "content"}}
    <script type="text/template" data-template="instance-details">
        {{#with instanceInfo}}
        <table class="table table-bordered">
            <tbody>
            <tr>
                <th scope="row">Source App Name</th>
                <td class="fw-bold">
                    <span class="copyable">{{sourceAppName}}</span>
                    <a class="ms-3 copy-button text-body" data-bs-toggle="tooltip" data-bs-placement="top" title="Copy to clipboard">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z"/>
                        </svg>
                    </a>
                </td>
            </tr>
            <tr>
                <th scope="row">Task ID</th>
                <td class="fw-bold">
                    <span class="copyable">{{taskId}}</span>
                    <a class="ms-3 copy-button text-body" data-bs-toggle="tooltip" data-bs-placement="top" title="Copy to clipboard">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z"/>
                        </svg>
                    </a>
                </td>
            </tr>
            <tr>
                <th scope="row">State</th>
                <td>${state}</td>
            </tr>
            <tr>
                <th scope="row">Host</th>
                <td>{{hostname}}</td>
            </tr>
            <tr>
                <th scope="row">Result</th>
                <td>${status}</td>
            </tr>
            <tr>
                <th scope="row">Created</th>
                <td>${created}</td>
            </tr>
            <tr>
                <th scope="row">Last Updated</th>
                <td>${age} ago (${updated})</td>
            </tr>
            <tr>
                <th scope="row">Error Message</th>
                <td>${errorMessage}</td>
            </tr>
            </tbody>
        </table>
        {{/with}}
    </script>
    <section>
        <div class="row">
            <div class="col-sm-12 col-md-6" id="instanceDetailsContainer">
            </div>
            <div class="col-sm-12 col-md-6">
                <table class="table table-bordered" id="instanceLogs">
                    <thead>
                        <tr>
                            <th>Logs</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </section>
{{/partial}}

{{#partial "page_js"}}
    function loadInstanceInfo() {
        $.ajax({
        url: '/apis/v1/tasks/{{sourceAppName}}/instances/{{taskId}}',
        success: function(res) {
            if(!res || !res.data) {
                console.log('No data received for {{sourceAppName}}/{{taskId}}');
                return;
            }
            const data = res.data;
            const result = data.taskResult || {};
            renderTemplate(
                'instance-details',
                [{
                    state: taskStateToHtml(data.state),
                    status: result.status
                            ? '{0} (Exit code: {1})'.format(result.status, result.exitCode)
                            : 'Task is still running',
                    created: new Date(data.created).toLocaleString(),
                    age: ageInWords(data.created),
                    updated: new Date(data.updated).toLocaleString(),
                    errorMessage: data.errorMessage,
                }],
                '#instanceDetailsContainer');
            }
        });
    }

    function logListExploder(res) {
        if(!res.files) {
            return [];
        }
        const ret = [];
        res.files.forEach( (fileName, i) => {
            const info = {};
            info['fileName'] = '<a href="/tasks/{{sourceAppName}}/instances/{{taskId}}/stream?logFileName=' + encodeURIComponent(fileName) + '" target="_blank">' + fileName + '</a>';
            info['downloadLink'] = '<a href="/apis/v1/logfiles/tasks/{{sourceAppName}}/{{taskId}}/download/' + fileName + '">Download</a>';
            ret.push(info);
        });
        return ret;
    }

    const logList = $('#instanceLogs').DataTable({
        'processing' : true,
        'ajax': {
            'url' : '/apis/v1/logfiles/tasks/{{sourceAppName}}/{{taskId}}/list',
            'dataSrc' : logListExploder
        },
        'paging': false,
        'searching' : false,
        'ordering' : false,
        'info' : false,
        'columns' : [
            { 'data' : 'fileName' },
            { 'data' : 'downloadLink' },
        ]
    });

    loadInstanceInfo();
    logList.ajax.reload();

    setInterval(() => {
        loadInstanceInfo();
        logList.ajax.reload(null, false);
    }, 30000);

{{/partial}}
{{> common/base}}