name: Release Artifacts and Container

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '*'           # Push events to every tag not containing /

jobs:
  deploy-java:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B package -DskipTests
#     - name: Deploy with Maven
#       run: mvn -B deploy -DskipTests
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Save Executor jar for next job
        uses: actions/upload-artifact@v4
        with:
          name: drove-executor
          path: drove-executor/target/drove-executor-${{ github.ref_name }}.jar
          retention-days: 1
          overwrite: true
      - name: Save Controller jar for next job
        uses: actions/upload-artifact@v4
        with:
          name: drove-controller
          path: drove-controller/target/drove-controller-${{ github.ref_name }}.jar
          retention-days: 1
          overwrite: true

  deploy:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        include:
          - image: ghcr.io/PhonePe/drove-executor
            context: drove-executor
          - image: ghcr.io/PhonePe/drove-controller
            context: drove-controller
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create directories
        run: mkdir -p ${{ matrix.context }}/target

      - name: Download artifacts from build step
        uses: actions/download-artifact@v4
          with:
            name: ${{ matrix.context }}
            path: ${{ matrix.context }}/target

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
            images: ${{ matrix.image }}

      - name: Build and push Docker image for executor
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: VERSION=${{ github.ref_name }}