#!/bin/bash

#
#  Copyright (c) 2024 Original Author(s), PhonePe India Pvt. Ltd.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

build_project() {

    echo "Building maven project"

    pushd .. 2>&1 > /dev/null
    mvn clean package
    STATUS=$?
    popd 2>&1 > /dev/null

    echo "Maven build completed. Status: ${STATUS}"

    return ${STATUS}

}

quick_build_project() {

    echo "Building maven project without tests"

    pushd .. 2>&1 > /dev/null
    mvn clean package -DskipTests
    STATUS=$?
    popd 2>&1 > /dev/null

    echo "Maven build completed. Status: ${STATUS}"

    return ${STATUS}

}

build_controller() {
    VERSIONSTR=$(echo -n "${1}"|sed 's/-SNAPSHOT/~snapshot/g')
    RELEASESTR=$(echo -n "${2}")
    echo  "Creating package dir for controller"
    cp -rf drove-controller-template/* BUILD/
    mkdir -p BUILD/usr/share/java/
    cp ../drove-controller/target/drove-controller-${VERSION}.jar BUILD/usr/share/java/drove-controller.jar
    pushd SPECS 2>&1 > /dev/null
    cat drove-controller.template.spec | sed 's/VERSIONSTR/'${VERSIONSTR}'/g' | sed 's/RELEASESTR/'${RELEASESTR}'/g' > drove-controller.spec
    popd 2>&1 > /dev/null
    rpmbuild --define "_topdir `pwd`" -v -bb SPECS/drove-controller.spec
    STATUS=$?
    if [ ${STATUS} -eq 0 ]; then
        rm -rf BUILD/*
        rm -rf BUILDROOT/*
        echo "Controller package built"
    fi
    return $STATUS 
}

build_executor() {
    VERSIONSTR=$(echo -n "${1}"|sed 's/-SNAPSHOT/~snapshot/g')
    RELEASESTR=$(echo -n "${2}")
    echo  "Creating package dir for executor"
    cp -rf drove-executor-template/* BUILD/
    mkdir -p BUILD/usr/share/java/
    cp ../drove-executor/target/drove-executor-${VERSION}.jar BUILD/usr/share/java/drove-executor.jar
    pushd SPECS 2>&1 > /dev/null
    cat drove-executor.template.spec | sed 's/VERSIONSTR/'${VERSIONSTR}'/g' | sed 's/RELEASESTR/'${RELEASESTR}'/g' > drove-executor.spec
    popd 2>&1 > /dev/null
    rpmbuild --define "_topdir `pwd`" -v -bb SPECS/drove-executor.spec
    STATUS=$?
    if [ ${STATUS} -eq 0 ]; then
        rm -rf BUILD/*
        rm -rf BUILDROOT/*
        echo "Executor package built"
    fi
    return $STATUS 
}

export REBUILD=0
export QUICK_REBUILD=0
export BUILDZIP=0

while getopts 'bqzh' opt; do
  case "$opt" in
    b)
      echo "Full rebuild requested"
      export REBUILD=1
      ;;
    q)
      echo "Full rebuild requested"
      export QUICK_REBUILD=1
      ;;
    z)
      echo "Zip file to be created"
      export BUILDZIP=1
      ;;

    ?|h)
      echo "Usage: $(basename $0) [-b|-q] [-z]"
      exit 1
      ;;
  esac
done
shift "$(($OPTIND -1))"

VERSION=$(cat ../pom.xml |grep version | grep -v xml | head -1 |tr -d ' '|sed 's/<version>//g'|sed 's/<\/version>//g')

TIMESTAMP=$(date +%Y%m%d%H%M%S)

echo "Building rpm version ${VERSION}-${TIMESTAMP}"

rm -rf RPMS/* drove-controller drove-executor

if [ ${QUICK_REBUILD} -eq 1 ]; then
    quick_build_project
else
  if [ ${REBUILD} -eq 1 ]; then
    build_project
  fi
fi

build_controller ${VERSION} ${TIMESTAMP}
build_executor ${VERSION} ${TIMESTAMP}

rm -rf packages/*.rpm 
mkdir -p packages
mv RPMS/*/*.rpm packages


if [ ${BUILDZIP} -eq 1 ]; then
    if [ -f packages.zip ]; then
        rm -f packages.zip
    fi
    zip -r packages.zip packages
fi



